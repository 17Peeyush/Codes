Problem: https://leetcode.com/problems/champagne-tower/
Date: 04-03-2022
Time Complexity: O(n*n)
Auxillary Space: O(n*n)
Code:
class Solution {
public:
     double champagneTower(int poured, int query_row, int query_glass) {
       vector<vector<double>> tower(101,vector<double>(101,0.0));
        tower[0][0]=poured;
         for(int i=0;i<=query_row;i++){
             for(int j=0;j<=query_glass;j++){
                double rem=max(tower[i][j]-1.0,0.0);
                 tower[i+1][j]+=rem/2.0;
                 tower[i+1][j+1]+=rem/2.0;
             }
         }
        return min(1.0,tower[query_row][query_glass]);
    }
};