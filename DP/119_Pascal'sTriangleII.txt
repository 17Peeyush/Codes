Given an integer rowIndex, return the rowIndexth (0-indexed) row of the Pascal's triangle.
In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:

Example 1:
Input: rowIndex = 3
Output: [1,3,3,1]

Example 2:
Input: rowIndex = 0
Output: [1]

Example 3:
Input: rowIndex = 1
Output: [1,1]
 
Constraints:
0 <= rowIndex <= 33

Code: Dynamic Programming solution
/*
Here rowIndex=n 
nCr=(n-1)Cr + (n-1)C(r-1) calculating this will give pascal triangle.
*/
 vector<int> getRow(int n) {
        if(n==0) return {1};
        if(n==1) return {1,1};
       vector<vector<int>> pascal(n+1,vector<int> (n+1));
        for(int i=0;i<=n;i++)
        {
         pascal[i][0]=1;
         pascal[i][i]=1;
        }
        for(int i=2;i<=n;i++)
        {
            for(int j=1;j<i;j++)
                pascal[i][j]=pascal[i-1][j]+pascal[i-1][j-1];
        }
        return pascal[n];
       
    }