Problem: https://leetcode.com/problems/minimum-path-sum/
Time Complexity: O(m*n)
Auxiliary Space: O(m*n)
Code:
class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        int m=grid.size(),n=grid[0].size();
        vector<vector<int>> dp(m+1,vector<int>(n+1,INT_MAX));
        dp[m-1][n-1]=0;
        dp[m-1][n]=0;
        dp[m][n-1]=0;
        for(int i=m-1;i>=0;i--)
        {
            for(int j=n-1;j>=0;j--)
            {
                dp[i][j]=grid[i][j]+min(dp[i][j+1],dp[i+1][j]);
            }
        }
        return dp[0][0];
    }
};