Problem: https://practice.geeksforgeeks.org/problems/rod-cutting0840/1
Time Complexity: O(n*n)
Auxillary Space: O(n*n)
Code:
 int cutRod(int price[], int n) {
        int piece[n];
        for(int i=0;i<n;i++)
            piece[i]=i+1;
        int dp[n+1][n+1];
        for(int i=0;i<n+1;i++)
        {
            dp[i][0]=0;
            dp[0][i]=0;
        }
        int w=n;
        for(int i=1;i<n+1;i++)
        {
            for(int j=1;j<n+1;j++)
            {
                if(j>=piece[i-1])
                {
                    dp[i][j]=max(price[i-1]+dp[i][j-piece[i-1]],dp[i-1][j]);
                }
                else
                {
                    dp[i][j]=dp[i-1][j];
                }
            }
        }
        return dp[n][n];
    }