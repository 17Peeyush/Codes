Problem: https://leetcode.com/problems/strange-printer
Time Complexity: O(n^3)
Auxiliary Space: O(n^2)
Code:
class Solution {
public:
    vector<vector<int>>dp;
    int solve(int i, int j,string&s){
        if(i==j) return 1;
        if(dp[i][j]!=-1) return dp[i][j];
        int res = INT_MAX;
        for(int k=i;k<j;k++){
            res = min(res, solve(i,k,s)+solve(k+1,j,s));
        }
        if(s[i]==s[j]) return dp[i][j]=res-1;
        return dp[i][j]=res;
    }
    int strangePrinter(string s) {
       int n = s.size();
       dp = vector<vector<int>>(n,vector<int>(n,-1));
       return solve(0,n-1,s);
    }
};