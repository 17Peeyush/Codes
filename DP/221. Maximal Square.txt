Problem: https://leetcode.com/problems/maximal-square/
Time Complexity: O(m*n)
Auxiliary Space: O(m*n)
Date: 17-12-2021
Code:
class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        int m=matrix.size();
        int n=matrix[0].size();
        vector<vector<int>>dp(m+1,vector<int>(n+1,0));
        int largest=0;
        for(int i=1;i<m+1;i++){
            for(int j=1;j<n+1;j++){
                if(matrix[i-1][j-1]=='1'){
                    dp[i][j]=1+min(min(dp[i-1][j],dp[i-1][j-1]),dp[i][j-1]);
                    largest=max(largest,dp[i][j]);
                }
            }
        }
        return largest*largest;
    }
};