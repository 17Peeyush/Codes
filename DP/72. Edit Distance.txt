Problem: https://leetcode.com/problems/edit-distance/
Time Complexity: O(3^m)
Auxillary Space: O(m*n)
Date: 24-10-2021
Code:
class Solution {
public:
    int n=-1,m=-1;
    vector<vector<int>>dp;
    int edit(string&w1, string &w2,int i,int j)
    {
        if(i==n||j==m)
        {
            if(i==n&&j==m)
                return 0;
            else if(i==n) return m-j;
            else return n-i;
        }
        if(dp[i][j]!=-1) return dp[i][j];
        if(w1[i]==w2[j])
        {
            return dp[i][j]=edit(w1,w2,i+1,j+1);
        }
        int rep=edit(w1,w2,i+1,j+1);
        int insert=edit(w1,w2,i,j+1);
        int del=edit(w1,w2,i+1,j);
        return dp[i][j]=1+min(rep,min(insert,del));
    }
    int minDistance(string word1, string word2) {
        n=word1.length(),m=word2.length();
        dp=vector<vector<int>>(n,vector<int>(m,-1));
        return edit(word1,word2,0,0);
    }
};