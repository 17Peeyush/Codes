Problem: https://leetcode.com/problems/distinct-subsequences/
Date: 28-03-2022
Time Complexity: O(m*n)
Auxillary Space: O(m*n)
Code:
class Solution {
public:
    vector<vector<int>>dp;
    int distinct(string&s,string&t,int i,int j){
        if(j==-1) return 1;
        else if(i==-1) return 0;
        if(dp[i][j]!=-1) return dp[i][j];
        if(s[i]==t[j]){
            return dp[i][j]=distinct(s,t,i-1,j-1)+distinct(s,t,i-1,j);
        }
        return dp[i][j]=distinct(s,t,i-1,j);
    }
    int numDistinct(string s, string t) {
        int m=s.length();
        int n=t.length();
        dp=vector<vector<int>>(m,vector<int>(n,-1));
        return distinct(s,t,m-1,n-1);
    }
};