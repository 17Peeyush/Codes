Problem: https://leetcode.com/problems/single-number-iii/
Time Complexity: O(n)
Auxillary Space: O(1)
Date: 06-11-2021
Code:
class Solution {
public:
    int findSet(int n)
    {
        for(int i=0;i<31;i++)
        {
            if((1<<i)&n)
                return i;
        }
        return 0;
    }
    vector<int> singleNumber(vector<int>& nums) {
        int txor=0;
        for(auto x: nums)
        {
            txor=txor^x;
        }
        int setBit=findSet(txor);
        int comp=1<<setBit;
        int g1=0,g2=0;
        for(auto x: nums)
        {
            if(comp&x)
            {
                g1=g1^x;
            }
            else
            {
                g2=g2^x;
            }
        }
        return {g1,g2};
    }
};