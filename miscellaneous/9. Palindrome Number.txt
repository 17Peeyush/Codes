Problem: https://leetcode.com/problems/palindrome-number/
Time Complexity: O(n)
Auxiliary Space: O(1)
Date: 03-01-2022
Code:
class Solution:
    def singleDig(self, x:int) ->bool:
        if(x>=0 and x<10): return True
        return False
    
    def isPalindrome(self, x: int) -> bool:
        if(x<0 or x%10==0 and x !=0):
            return False
        else:
            if(self.singleDig(x)): return True; 
            ttpow=0
            num=x
            while(num):
                ttpow+=1
                num=num//10
            front,back=x,x
            for i in range(1,ttpow//2 +1):
                cf=front//pow(10,ttpow-i)
                front=front%pow(10,ttpow-i)
                cb=back%10
                back=back//10
                if cf!=cb: return False
            return True
            
        