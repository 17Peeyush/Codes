Problem: https://leetcode.com/problems/seat-reservation-manager/description
Time Complexity: O(nlogn)
Auxiliary Space: O(n)
class SeatManager {
public:

    set<int> seat;
    SeatManager(int n) {
        for(int i=1;i<=n;i++)
        {
            seat.insert(i);
        }
    }
    
    int reserve() {
        int seat_no=*seat.begin();
        seat.erase(seat_no);
        return seat_no;
    }
    
    void unreserve(int seatNumber) {
        seat.insert(seatNumber);
    }
};

/**
 * Your SeatManager object will be instantiated and called as such:
 * SeatManager* obj = new SeatManager(n);
 * int param_1 = obj->reserve();
 * obj->unreserve(seatNumber);
 */