Problem: https://leetcode.com/problems/divide-array-into-arrays-with-max-difference
Time Complexity: O(nlogn)
Auxillary Space: O(n)
class Solution {
public:
    vector<vector<int>> divideArray(vector<int>& nums, int k) {
        sort(nums.begin(),nums.end());
        vector<vector<int>>res;
        int n=nums.size();
        bool flag = true;
        for(int i=2;i<n;i=i+3){
            if((nums[i]-nums[i-1])<=k && (nums[i-1]-nums[i-2])<=k &&(nums[i]-nums[i-2])<=k)
            {
                res.push_back({nums[i-2],nums[i-1],nums[i]});
            }
            else
            {
                flag = false;
                break;
            }
        }
        if(!flag) return {};
        return res;
    }
};