Problem: https://leetcode.com/problems/subarray-sums-divisible-by-k/
Time Complexity: O(1)
Auxiliary Space: O(n)
Code:
class Solution {
public:
    int subarraysDivByK(vector<int>& nums, int k) {
        unordered_map<int,int>mp;
        int count=0,sum=0;
        mp[0]=1;
        int n=nums.size();
        for(int i=0;i<n;i++)
        {
            sum+=nums[i];
            int rem=sum%k;
            if(rem<0)
                rem=k+rem;
            if(mp.find(rem)!=mp.end())
            {
                count+=mp[rem];
                mp[rem]++;
            }
            else
            {
                mp[rem]++;
            }
        }
        return count;
    }
};