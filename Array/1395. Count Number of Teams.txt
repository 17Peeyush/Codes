Problem: https://leetcode.com/problems/count-number-of-teams/
Time Complexity: O(n^2)
Auxiliary Space: O(n)
Code:
class Solution {
public:
    int numTeams(vector<int>& rating) {
        int group =0;
        int n = rating.size();
        int l,r,l1,r1;
        for(int i=1;i<n;i++){
            l=0;l1=0;
            for(int j=i-1;j>=0;j--){
                if(rating[j]<rating[i]){
                    l++;
                }
                if(rating[j]>rating[i]){
                    l1++;
                }
            }
            r=0;r1=0;
            for(int j=i+1;j<n;j++){
                if(rating[i]<rating[j]){
                    r++;
                }
                if(rating[i]>rating[j]){
                    r1++;
                }
            }
            group+=(l*r)+(l1*r1);
        }
        return group;
    }
};