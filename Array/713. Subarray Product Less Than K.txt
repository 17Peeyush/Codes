Problem: https://leetcode.com/problems/subarray-product-less-than-k/
Time Complexity: O(n)
Auxiliary Space: O(1)
Code:
class Solution {
public:
    int numSubarrayProductLessThanK(vector<int>& nums, int k) {
      if(!k) return 0;
    int count=0;
     int start=0,end=0;
     int n=nums.size(),prod=1;
     while(end<n)
     {
         prod*=nums[end];
         if(prod<k)
          {
             count+=end-start+1;
         }
         else
         {
             while(start<end&&prod>=k)
             {
                 prod/=nums[start];
                 start++;
             }
             if(prod<k)
            { count+=end-start+1;}
         }
         end++;
     }
        return count;
    }
};