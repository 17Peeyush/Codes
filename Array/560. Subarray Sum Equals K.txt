Problem: https://leetcode.com/problems/subarray-sum-equals-k/
Approach
Time Complexity: O(n)
Auxillary Space: O(n)
Here we are taking a fact into consideration that while calculating cumulative sum from say 'i' to 'l' aur sum is 's1' and there exist 'j' such that 'i'<'j'<'l',
And sum of 'i' to 'j' is equal to 's1-k' i.e. sum of from 'j+1' to 'l' will be equal to 'k' hence count of subarray with sum equal to 'k' increments.
Code:
class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        unordered_map<int,int> mp;
        int count=0,currsum=0,n=nums.size();
        for(int i=0;i<n;i++)
        {
            currsum+=nums[i];
            if(currsum==k)
                count++;
            if(mp.find(currsum-k)!=mp.end())
                count+=mp[currsum-k];
             mp[currsum]++;
        }
        return count;
    }
};