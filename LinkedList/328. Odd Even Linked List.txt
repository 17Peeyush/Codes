Problem: https://leetcode.com/problems/odd-even-linked-list/
Time Complexity: O(n)
Auxillary Space: O(1)
Date: 02-12-2021
Code:
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(!head) return nullptr;
        ListNode *odd=new ListNode(),*even=new ListNode();
        ListNode*p=head,*o=odd,*e=even;
        bool flag=false;
        while(p!=nullptr){
            if(flag)
            {
                e->next=p;
                e=e->next;
                flag=false;
            }
            else
            {
                o->next=p;
                o=o->next;
                flag=true;
            }
            p=p->next;
        }
        o->next=even->next;
        e->next=nullptr;
        return odd->next;
        
    }
};
