Problem: https://leetcode.com/problems/remove-nodes-from-linked-list/
Time Complexity: O(n)
Auxillary Space: O(n) Recursive stack
Code:
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNodes(ListNode* head) {
        if(head->next==nullptr)
        {
            return head;
        }
        ListNode *t=removeNodes(head->next);
        if(head->val<t->val)
        {
            return t;
        }
        head->next=t;
        return head;
    }
};