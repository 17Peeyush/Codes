Problem: https://www.geeksforgeeks.org/problems/infix-to-postfix-1587115620/1
Time Complexity: O(n)
Auxiliary Space: O(n)
Code:
class Solution {
  public:
    // Function to convert an infix expression to a postfix expression.
    string infixToPostfix(string s) {
        // Your code here
        unordered_map<char,int> rank;
        rank['^']=3;
        rank['/']=2;
        rank['*']=2;
        rank['+']=1;
        rank['-']=1;
        int n = s.size();
        string res="";
        int i=0;
        stack<char>st;
        while(i<n){
            if(isalpha(s[i])||isdigit(s[i])){
                res+=s[i];
                i++;
            }
            else if(s[i]==')'){
                while(!st.empty()&&st.top()!='('){
                    res+=st.top();
                    st.pop();
                }
                st.pop();
                i++;
            }
            else if(s[i]=='('||st.empty()){
                st.push(s[i]);
                i++;
            }
            else if(!st.empty()&&st.top()=='('){
                st.push(s[i]);
                i++;
            }
            else if(rank[s[i]]>rank[st.top()]){
                st.push(s[i]);
                i++;
            }
            else if(rank[s[i]]<=rank[st.top()]){
                while(!st.empty()&&rank[s[i]]<=rank[st.top()]&&st.top()!='('){
                    res+=st.top();
                    st.pop();
                }
                st.push(s[i]);
                i++;
            }
        }
        while(!st.empty())
        {
            if(st.top()!='('||st.top()!=')')
            res+=st.top();
            st.pop();
        }
        return res;
    }
};
