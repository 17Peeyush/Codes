Problem: https://leetcode.com/problems/merge-intervals/
Time Complexity: O(n)
Auxiliary Space: O(n)
Code:
class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        sort(intervals.begin(),intervals.end());
        vector<vector<int>>out;
        stack<vector<int>> st;
        st.push(intervals[0]);
        for(auto x: intervals)
        {
            auto y=x;
            if(st.top()[1]>=y[0])
            {
                vector<int> t={min(st.top()[0],y[0]),max(st.top()[1],y[1])};
                st.pop();
                st.push(t);
            }
            else
            {
                st.push(y);
            }
        }
        while(!st.empty())
        {
            out.push_back(st.top());
            st.pop();
        }
        return out;
    }
};