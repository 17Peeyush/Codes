Problem: https://leetcode.com/problems/longest-unequal-adjacent-groups-subsequence-i/description/
Time Complexity: O(n)
Auxiliary Space: O(1), not including the returning array
Code:
class Solution {
public:
    vector<string> getLongestSubsequence(vector<string>& words, vector<int>& groups) {
        vector<string>res;
        int flag = groups[0];
        int n = words.size();
        for(int i=0;i<n;i++){
            if(groups[i]==flag){
                res.push_back(words[i]);
                flag^=1;
            }
        }
        return res;
    }
};