Problem: https://practice.geeksforgeeks.org/problems/minimum-platforms-1587115620/1/
Date: 11-03-2022
Time Complexity: O(nlogn+n*p) , where n is the length of arrival array and p is the number of platform required
Auxillary Space: O(n)
Code:
class Solution{
    public:
    //Function to find the minimum number of platforms required at the
    //railway station such that no train waits.
    int findPlatform(int arr[], int dep[], int n)
    {
    	// Your code here
    	vector<pair<int,int>>times,platform;
    	for(int i=0;i<n;i++){
    	    times.push_back({arr[i],dep[i]});
    	}
    	sort(times.begin(),times.end());
    	platform.push_back(times[0]);
    	for(int i=1;i<n;i++)
    	{
    	    bool required=true;
    	    for(int j=0;j<platform.size();j++){
    	        if(times[i].first>platform[j].second){
    	            platform[j]=times[i];
    	            required=false;
    	            break;
    	        }
    	    }
    	    if(required){
    	        platform.push_back(times[i]);
    	    }
    	}
    	return (int)platform.size();
    }
};