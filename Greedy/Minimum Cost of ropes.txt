Problem: https://practice.geeksforgeeks.org/problems/minimum-cost-of-ropes-1587115620/1
Time Complexity: O(nlogn)
Auxillary space: O(n)
Code:
//Function to return the minimum cost of connecting the ropes.
    long long minCost(long long arr[], long long n) {
        // Your code here
        priority_queue<long long,vector<long long>,greater<long long>> q;
        for(int i=0;i<n;i++)
        {
            q.push(arr[i]);
        }
        long long cost=0;
        while(q.size()!=1)
        {
            long long temp=q.top();
            q.pop();
            temp+=q.top();
            q.pop();
            cost+=temp;
            q.push(temp);
        }
        return cost;
    }