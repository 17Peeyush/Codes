Problem: https://leetcode.com/problems/maximum-average-subarray-i/description/
Companies: Google
Time Complexity: O(n)
Auxiliary Space: O(1)
Code:
class Solution {
public:
    double findMaxAverage(vector<int>& nums, int k) {
        int average = INT_MIN;
        int n = nums.size();
        int wndsum =0;
        for(int i=0;i<k;i++){
            wndsum+=nums[i];
        }
        average = max(average,wndsum);
        for(int j=0,i=k;i<n;i++,j++){
            wndsum-=nums[j];
            wndsum+=nums[i];
            average = max(average,wndsum);
        }

        return (double)average/k;
    }
};