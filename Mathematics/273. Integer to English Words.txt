Problem: https://leetcode.com/problems/integer-to-english-words/description
Approach: Divide our number into strings of 3 and for each string handle separately the ones, tens and hundreds. Based on the count of these 3 stirngs calculate the power of three i.e thousand, million, billion. For handling space used string stream to split the result string from whitespace. Another approach can be spilting when we encounter capital alphabet.
Time Complexity: O(n)
Auxiliary Space: O(1), size will always be less than the combined strings values of our map
Code:
class Solution {
public:
    unordered_map<string,string>mp{
        {"0","Zero"},
        {"1","One"},
        {"2","Two"},
        {"3","Three"},
        {"4","Four"},
        {"5","Five"},
        {"6","Six"},
        {"7","Seven"},
        {"8","Eight"},
        {"9","Nine"},
        {"10","Ten"},
        {"11","Eleven"},
        {"12", "Twelve"},
        {"13", "Thirteen"},
        {"14", "Fourteen"},
        {"15", "Fifteen"},
        {"16", "Sixteen"},
        {"17", "Seventeen"},
        {"18", "Eighteen"},
        {"19", "Nineteen"},
        {"20", "Twenty"},
        {"30", "Thirty"},
        {"40", "Forty"},
        {"50", "Fifty"},
        {"60", "Sixty"},
        {"70", "Seventy"},
        {"80", "Eighty"},
        {"90", "Ninety"},
        {"100", "Hundred"},
        {"1000", "Thousand"},
        {"1000000", "Million"},
        {"1000000000", "Billion"}
    };

    string findPowerof3(int i){
        if(i==0) return "";
        else if(i==3) return "Thousand ";
        else if(i==6) return "Million ";
        return "Billion ";
    }
    string helper(string num){
        int n = num.size();
        int i=0;
        string res="";
        if(i<n){
            if(num[i]!='0'){
                res+=mp[string(1,num[i])];
            }
            i++;
        }
        if(i<n){
            if(num[i]!='0' && num[i]!='1'){
                string tens = "00";
                tens[0]=num[i];
                res = mp[tens] +" "+ res;
            }
            else if(num[i]=='1'){
                string tens = string(1,num[i])+string(1,num[i-1]);
                res = mp[tens];
            }
            i++;
        }
        if(i<n){
            if(num[i]!='0'){
                res = mp[string(1,num[i])] + " Hundred " + res;
            }
        }
        return res;
    }
    string numberToWords(int n) {
        if(n<=20)
        {
            return mp[to_string(n)];
        }
        string num = to_string(n);
        int len = num.size();
        reverse(num.begin(),num.end());
        string temp,res="",mul;
        for(int i=0;i<len;i=i+3){
            temp = num.substr(i,3);
            mul =  findPowerof3(i);
            temp = helper(temp);
            if(temp!="")
            {
                res = temp+" "+mul+res;
            }
            
        }
        stringstream ss(res);
        string result="";
        string word;
        queue<string>q;
        while (getline(ss, word, ' ')) {
           if(word.size())
                q.push(word);
        }
        while(q.size()!=1){
            result +=q.front() + " ";
            q.pop();
        }
        result+=q.front();
        return result;
    }
};