Problem: https://leetcode.com/problems/get-equal-substrings-within-budget/
Time Complexity: O(n)
Auxiliary Space: O(n)
Approach: Here we are converting it to a standard question by taking the difference of the elements of 's' and 't' and storing it in an array then we have an array of integers. Then question boils down to sliding window that with max capacity what is the maximum length of the subarray that can  be formed.
Code:
class Solution {
public:
    int equalSubstring(string s, string t, int maxCost) {
        int n= s.size();
        vector<int> arr(n,0);
        int maxlen =0;
        for(int i=0;i<n;i++)
        {
            arr[i]=abs(s[i]-t[i]);
        }
        int l=0,r=0,currCost=0;
        while(l<n&&r<n){
            if(currCost+arr[r]<=maxCost){
                currCost+=arr[r];
                maxlen = max(maxlen, r-l+1);
                r++;
            }
            else{
                currCost-=arr[l];
                l++;
            }
        }
        return maxlen;
    }
};