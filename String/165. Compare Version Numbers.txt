Problem: https://leetcode.com/problems/compare-version-numbers/
Date: 25-02-2022
Time Complexity: O(n)
Auxiliary Space: O(n)
Code:
class Solution {
public:
    void store(string ver,vector<int>&v){
        ver+='.';
        string temp="";
        for(auto x:ver)
        {
            if(x=='.')
            {
                int t=stoi(temp);
                v.push_back(t);
                temp="";
            }
            else
            {
                temp+=x;
            }
        }
    }
    
    void addzeros(vector<int>&v,int i)
    {
        while(i--){
            v.push_back(0);
        }
    }
    int compareVersion(string version1, string version2) {
        vector<int>v1,v2;
        store(version1,v1);
        store(version2,v2);
        int n=v1.size();
        int m=v2.size();
        if(n!=m)
        {
            if(n>m)
                addzeros(v2,n-m);
            else
                addzeros(v1,m-n);
        }
        int l=max(n,m),comp=0;
        for(int i=0;i<l;i++)
        {
            if(v1[i]>v2[i])
            {
                comp=1;
                break;
            }
            else if(v1[i]<v2[i])
            {
                comp=-1;
                break;
            }
        }
        return comp;
    }
};