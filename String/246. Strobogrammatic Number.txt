Problem: https://leetcode.com/problems/strobogrammatic-number/description/
Given a string num which represents an integer, return true if num is a strobogrammatic number.
A strobogrammatic number is a number that looks the same when rotated 180 degrees (looked at upside down).
Example 1:
Input: num = "69"
Output: true

Example 2:
Input: num = "88"
Output: true

Example 3:
Input: num = "962"
Output: false
 
Constraints:
1 <= num.length <= 50
num consists of only digits.
num does not contain any leading zeros except for zero itself.
Companies: Facebook, Uber, Google
Time Complexity: O(n)
Auxiliary Space: O(n)
Code:
class Solution {
public:
    bool isStrobogrammatic(string num) {
        //6->9
        //8,1,0
        int n = num.size();
        int i = 0, j = n-1;
        while(i<=j){
            if((num[i]=='6'&&num[j]=='9')||(num[i]=='9'&&num[j]=='6'))
            {
                i++;j--;
            }
            else if((num[i]=='1'||num[i]=='8'||num[i]=='0')&&(num[i]==num[j])){
                i++;j--;
            }else{
                return false;
            }
        }
        return true;
    }
};