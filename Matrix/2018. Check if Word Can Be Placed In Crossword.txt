Problem: https://leetcode.com/problems/check-if-word-can-be-placed-in-crossword/description/
Companies: Google
Approach: Here we will iterate through the crossword and try to find the blocks where our word can fit and take those blocks as string, it will easier to compare. We need to compare both top-bottom, bottom-top, left-right, right-left so instead of this we reverse our word. 
Time Complexity: O(nm), n and m is the dimension of the crossword
Space Complexity: O(k), where k is the substrings of length word
Code:
class Solution {
public:

    bool canfit(const string &a, const string &b){
        int n = b.size();
        for(int i=0;i<n;i++){
            if(a[i]!=' ' && a[i]!=b[i])
                return false;
        }
        return true;
    }


    bool placeWordInCrossword(vector<vector<char>>& board, string word) {
        int m = board.size();
        int n = board[0].size();
        unordered_set<string>s;
        int ws = word.size();
        string t ="";
        for(int i=0;i<m;i++){ //rows
            t = "";
        for(int j=0;j<n;j++){
            if(board[i][j] =='#'){
                if(t.size()==ws){
                    s.insert(t);
                }
                t ="";
            }
            else{
                t+=string(1,board[i][j]);
                }
            }
            if(t.size()==ws){
                s.insert(t);
            }
        }
        for( int j=0;j<n;j++){
            t="";
            for(int i=0;i<m;i++){
                if(board[i][j]=='#'){
                    if(t.size()==ws){
                        s.insert(t);
                    }
                    t="";
                }
                else{
                    t+=board[i][j];
                }
            }
            if(t.size()==ws){
                s.insert(t);
            }
        }

        string rev = string(ws,' ');
        for(int i=ws-1,j=0;i>=0;i--,j++){
            rev[j]=word[i];
        }
        for(auto x:s){
            if(canfit(x, word)||canfit(x,rev)) return true;
        } 
        return false;

    }
};
