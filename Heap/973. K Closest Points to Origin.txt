Problem: https://leetcode.com/problems/k-closest-points-to-origin/
Time Complexity: O(nlogn)
Auxillary Space: O(n)
Date: 22-09-21
Code:
class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        priority_queue<pair<double,int>,vector<pair<double,int>>,greater<pair<double,int>>>q;
        int n=points.size();
        for(int i=0;i<n;i++)
        {
            int x=points[i][0];
            int y=points[i][1];
            q.push({sqrt(x*x+y*y),i});
        }
        vector<vector<int>>out;
        while(k)
        {
            auto x=q.top();q.pop();
            out.push_back(points[x.second]);
            k--;
        }
        return out;
    }
};