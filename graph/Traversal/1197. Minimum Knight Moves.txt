Problem: https://leetcode.com/problems/minimum-knight-moves/
Companies: Citadel, Facebook, Microsoft, LinkedIn, Indeed, Amazon, Google, IMC, Expedia, Nvidia
Approach: (BFS)
Time Complexity: O(k^8), where k is the number of steps to reach the desired position
Auxillary Space: O(k^8), where k is the number of steps to reach the desired position
Code:
class Solution {
public:
    int minKnightMoves(int x, int y) {
        if(x==0&&y==0) return 0;
        bool dp[602][602];
        memset(dp, true, sizeof(dp));
        int dir[8][2]={{-2,-1},{-2,1},{-1,-2},{1,-2},{-1,2},{1,2},{2,-1},{2,1}};
        queue<pair<int,int>> q;
        int step =0,n;
        pair<int,int> t;
        int r,c;
        q.push({0,0});
        dp[300][300] = false;
        while(!q.empty()){
            n = q.size();
            while(n--)
            {
                t=q.front();
                q.pop();
                //traversing 8 directions 
                for(int i=0;i<8;i++){
                    r = t.first;
                    c = t.second;
                    r+=dir[i][0];
                    c+=dir[i][1];
                    if(r==x&&c==y)
                    {
                        return step+1;
                    }
                    if(dp[r+300][c+300]&&abs(r)+abs(c)<=300){
                        q.push({r,c});
                        dp[r+300][c+300]=false;
                    }
                }
            }
            step++;
        }
        return -1;
    }
};