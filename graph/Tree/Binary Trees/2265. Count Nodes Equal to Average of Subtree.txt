Problem: https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree/
Time Complexity: O(n)
Auxiliary Space: O(n)
Date: 2-11-2023
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int count=0;
    void average(TreeNode* root, int & sum, int &num)
    {
        if(root == nullptr)
        {
            sum = 0;
            num = 0;
            return ;
        }
        int lsum=0, lnum=0, rsum=0, rnum=0;
        average(root->left,lsum,lnum);
        average(root->right,rsum,rnum);
        sum = lsum+rsum+root->val;
        num = lnum+rnum+1;
        if(root->val == (sum/num))
        {
            count++;
        }
        return;
    }
    int averageOfSubtree(TreeNode* root) {
        int s=0,n=0;
        average(root,s,n);
        return count;
    }
};