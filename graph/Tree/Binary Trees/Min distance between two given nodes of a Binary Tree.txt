Problem: https://practice.geeksforgeeks.org/problems/min-distance-between-two-given-nodes-of-a-binary-tree/1
Time Complexity: O(n), n is the number of nodes in the binary tree.
Auxillary Space: O(h), size of recursive stack.
Date: 06-10-2021
Code:
/*A binary tree node
struct Node
{
    int data;
    Node* left, * right;
}; */

class Solution{
    public:
    /* Should return minimum distance between a and b
    in a tree with given root*/
    int distance=INT_MAX;
    pair<int,int> minDist(Node* root,int a,int b)
    {
        if(!root) return {0,0};
        pair<int,int>t={0,0};
        if(root->data==a||root->data==b)
        {
            t.first=1;t.second=1;
        }
        pair<int,int>ls=minDist(root->left,a,b);
        pair<int,int>rs=minDist(root->right,a,b);
        if(t.first==1)
        {
            if(ls.first==1)
            {
                distance=ls.second;
                t.first=0;
            }
            else if(rs.first==1)
            {
                distance=rs.second;
                t.first=0;
            }
            return t;
        }
        if(ls.first==1&&rs.first==1)
        {
            distance=ls.second+rs.second;
            t.first=0;
            return t;
        }
        if(ls.first==1)
        {
            t.first=1;t.second=ls.second+1;
        }
        else if(rs.first==1)
        {
            t.first=1;t.second=rs.second+1;
        }
        return t;
    }
    int findDist(Node* root, int a, int b) {
        minDist(root,a,b);
        return distance;
    }
};