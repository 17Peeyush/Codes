Problem: https://leetcode.com/problems/count-complete-tree-nodes/
Time Complexity: O(n)
Auxillary Space: O(h)
Date: 24-10-2021
Code:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int countNodes(TreeNode* root) {
        if(!root) return 0;
        int l=0,r=0;
        TreeNode*p=root;
        while(p)
        {
            p=p->left;l++;
        }
        p=root;
        while(p)
        {
            p=p->right;r++;
        }
        if(l==r)
        {
            return pow(2,l)-1;
        }
        return 1+countNodes(root->left)+countNodes(root->right);
    }
};