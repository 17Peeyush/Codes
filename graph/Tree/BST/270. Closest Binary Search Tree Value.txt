Problem: https://leetcode.com/problems/closest-binary-search-tree-value/description/
Given the root of a binary search tree and a target value, return the value in the BST that is closest to the target. If there are multiple answers, print the smallest.

Example1:
Input: root = [4,2,5,1,3], target = 3.714286
Output: 4

Companies: Facebook, Oracel, Coupang, Amazon, Microsoft, Google, Snapchat
Time Complexity: O(n)
Auxiliary Space: O(n), if considering recursive stack space
Code:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int closest = INT_MAX;
    double diff = INT_MAX;
    void traverse(TreeNode* root,double &t){
        if(root==nullptr){
            return;
        }
        traverse(root->left,t);
        if( abs(t-(double)root->val)<diff){
            diff = abs(t-(double)root->val);
            closest = root->val;
        }
        traverse(root->right,t);
    }
    int closestValue(TreeNode* root, double target) {
        traverse(root,target);
        return closest;
    }
};